{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ntmin\\\\Downloads\\\\flightapi\\\\react\\\\src\\\\components\\\\RoundTripSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const RoundTripSearch = () => {\n  _s();\n  const [destination, setDestination] = useState('');\n  const [depart, setDepart] = useState('');\n  const [traveler, setTraveler] = useState('');\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [flights, setFlights] = useState([]);\n  const [error, setError] = useState('');\n\n  // function to  connect to backend java and query through database\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const startTime = startDate.toISOString();\n    const endTime = endDate.toISOString();\n    try {\n      const response = await fetch(`http://localhost:8080/flights/search?departureCity=${depart}&arrivalCity=${destination}&startTime=${startTime}&numTravelers=${traveler}`, {\n        method: 'GET',\n        header: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const result = await response.json();\n      if (response.ok) {\n        setFlights(result);\n      } else if (response.status === 404) {\n        setError('No flights found for the selected criteria.');\n        setFlights([]);\n      } else {\n        setError('An error occurred while fetching flights.');\n        setFlights([]);\n      }\n    } catch {\n      setError('Unable to connect to the server.');\n      setFlights([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SearchWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"TripForm\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"TripInput\",\n          placeholder: \"Enter your destination\",\n          value: destination,\n          onChange: e => setDestination(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"TripInput\",\n          placeholder: \"Enter your Departure\",\n          value: depart,\n          onChange: e => setDepart(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"TripInput\",\n          placeholder: \"Enter number of traveler\",\n          value: traveler,\n          onChange: e => setTraveler(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: startDate,\n          onChange: startDate => setStartDate(startDate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: endDate,\n          onChange: endDate => setEndDate(endDate),\n          minDate: startDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ResultsWrapper\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 23\n      }, this), flights.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"FlightResults\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Search Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: flights.map((flight, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Flight ID: \", flight.id, \", Departure: \", flight.departureCity, \", Arrival: \", flight.arrivalCity, \", Date: \", flight.date]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(RoundTripSearch, \"WtMGo2ASgU5WUa9wrV3UwCFV0TU=\");\n_c = RoundTripSearch;\nvar _c;\n$RefreshReg$(_c, \"RoundTripSearch\");","map":{"version":3,"names":["React","useState","DatePicker","jsxDEV","_jsxDEV","RoundTripSearch","_s","destination","setDestination","depart","setDepart","traveler","setTraveler","startDate","setStartDate","Date","endDate","setEndDate","flights","setFlights","error","setError","handleSubmit","e","preventDefault","startTime","toISOString","endTime","response","fetch","method","header","result","json","ok","status","children","className","onSubmit","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","selected","minDate","length","map","flight","index","id","departureCity","arrivalCity","date","_c","$RefreshReg$"],"sources":["C:/Users/ntmin/Downloads/flightapi/react/src/components/RoundTripSearch.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport const RoundTripSearch = () => {\r\n    const [destination, setDestination] = useState('');\r\n    const [depart, setDepart] = useState('');\r\n    const [traveler, setTraveler] = useState('');\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [endDate, setEndDate] = useState(new Date());\r\n    const [flights, setFlights] = useState([]);\r\n    const [error, setError] = useState('');\r\n\r\n    \r\n    // function to  connect to backend java and query through database\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const startTime = startDate.toISOString();\r\n        const endTime = endDate.toISOString();\r\n\r\n        try {\r\n            const response = await fetch (`http://localhost:8080/flights/search?departureCity=${depart}&arrivalCity=${destination}&startTime=${startTime}&numTravelers=${traveler}`, {\r\n                method: 'GET',\r\n                header: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n            \r\n            const result = await response.json();\r\n\r\n            if (response.ok) {\r\n                setFlights(result);\r\n            }\r\n            else if (response.status === 404) {\r\n                setError('No flights found for the selected criteria.');\r\n                setFlights([]);\r\n            }\r\n            else {\r\n                setError('An error occurred while fetching flights.');\r\n                setFlights([]);\r\n            }\r\n        }\r\n        catch {\r\n            setError('Unable to connect to the server.');\r\n            setFlights([]);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"SearchWrapper\">\r\n                <form className=\"TripForm\" onSubmit={handleSubmit}>\r\n                    <input type=\"text\" className=\"TripInput\"\r\n                    placeholder='Enter your destination'\r\n                    value={destination}\r\n                    onChange={(e) => setDestination(e.target.value)} />\r\n\r\n                    <input type=\"text\" className=\"TripInput\"\r\n                    placeholder='Enter your Departure'\r\n                    value={depart}\r\n                    onChange={(e) => setDepart(e.target.value)} />\r\n\r\n                    <input type=\"text\" className=\"TripInput\"\r\n                    placeholder='Enter number of traveler'\r\n                    value={traveler}\r\n                    onChange={(e) => setTraveler(e.target.value)} />\r\n\r\n                    <DatePicker selected={startDate} onChange={(startDate) => setStartDate(startDate)} />\r\n                    <DatePicker selected={endDate} onChange={(endDate) => setEndDate(endDate)} minDate={startDate} />\r\n                    \r\n                    <button type='submit'>Submit</button>\r\n                </form>\r\n            </div>\r\n\r\n            <div className=\"ResultsWrapper\">\r\n            {error && <p className=\"Error\">{error}</p>}\r\n            {flights.length > 0 && (\r\n                <div className=\"FlightResults\">\r\n                    <h3>Search Results</h3>\r\n                    <ul>\r\n                        {flights.map((flight, index) => (\r\n                            <li key={index}>\r\n                                Flight ID: {flight.id}, Departure: {flight.departureCity}, Arrival: {flight.arrivalCity}, Date: {flight.date}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}